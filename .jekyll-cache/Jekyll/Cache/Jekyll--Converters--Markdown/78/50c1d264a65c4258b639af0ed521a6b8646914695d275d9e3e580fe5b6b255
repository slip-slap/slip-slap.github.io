I"0*
<p><img src="/images/algorithm-design-dynamic-programming-multistage.png" height="" width="" /></p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
#include &lt;list&gt;
</span>
<span class="k">const</span> <span class="kt">int</span> <span class="n">GRAPH_SIZE</span> <span class="o">=</span> <span class="mi">13</span><span class="p">;</span>
<span class="kt">int</span> <span class="nf">shortest_path</span><span class="p">(</span><span class="kt">int</span> <span class="n">graph</span><span class="p">[</span><span class="n">GRAPH_SIZE</span><span class="p">][</span><span class="n">GRAPH_SIZE</span><span class="p">],</span><span class="kt">int</span> <span class="n">stage</span><span class="p">,</span> <span class="kt">int</span> <span class="n">vertex</span><span class="p">){</span>
	<span class="k">if</span><span class="p">(</span><span class="n">stage</span><span class="o">==</span><span class="mi">5</span><span class="p">){</span><span class="k">return</span> <span class="mi">0</span><span class="p">;}</span>

	<span class="kt">int</span> <span class="n">minimum</span> <span class="o">=</span> <span class="mi">10000</span><span class="p">;</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">1</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">GRAPH_SIZE</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">if</span><span class="p">(</span><span class="n">graph</span><span class="p">[</span><span class="n">vertex</span><span class="p">][</span><span class="n">i</span><span class="p">]</span><span class="o">!=</span> <span class="mi">0</span><span class="p">){</span>
			<span class="kt">int</span> <span class="n">temp</span><span class="o">=</span> <span class="n">graph</span><span class="p">[</span><span class="n">vertex</span><span class="p">][</span><span class="n">i</span><span class="p">]</span> <span class="o">+</span> <span class="n">shortest_path</span><span class="p">(</span><span class="n">graph</span><span class="p">,</span> <span class="n">stage</span><span class="o">+</span><span class="mi">1</span><span class="p">,</span><span class="n">i</span><span class="p">);</span>
			<span class="k">if</span><span class="p">(</span><span class="n">temp</span> <span class="o">&lt;</span> <span class="n">minimum</span><span class="p">){</span>
				<span class="n">minimum</span> <span class="o">=</span> <span class="n">temp</span><span class="p">;</span>
			<span class="p">}</span>	
		<span class="p">}</span>
	<span class="p">}</span>
	<span class="k">return</span> <span class="n">minimum</span><span class="p">;</span>
<span class="p">}</span>

<span class="kt">void</span> <span class="nf">print_array</span><span class="p">(</span><span class="kt">int</span> <span class="n">array</span><span class="p">[</span><span class="n">GRAPH_SIZE</span><span class="p">][</span><span class="n">GRAPH_SIZE</span><span class="p">],</span> <span class="kt">int</span> <span class="n">row</span><span class="p">,</span> <span class="kt">int</span> <span class="n">column</span><span class="p">){</span>
	<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">row</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">){</span>
		<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">j</span><span class="o">=</span><span class="mi">0</span><span class="p">;</span><span class="n">j</span><span class="o">&lt;</span><span class="n">column</span><span class="p">;</span><span class="n">j</span><span class="o">++</span><span class="p">){</span>
			<span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">array</span><span class="p">[</span><span class="n">i</span><span class="p">][</span><span class="n">j</span><span class="p">]</span><span class="o">&lt;&lt;</span><span class="s">", "</span><span class="p">;</span>
		<span class="p">}</span>
		<span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
	<span class="p">}</span>

<span class="p">}</span>
<span class="kt">int</span> <span class="nf">main</span><span class="p">(){</span>
	<span class="kt">int</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="n">GRAPH_SIZE</span><span class="p">][</span><span class="n">GRAPH_SIZE</span><span class="p">]</span><span class="o">=</span><span class="p">{</span><span class="mi">0</span><span class="p">};</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">2</span><span class="p">]</span> <span class="o">=</span> <span class="mi">9</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">3</span><span class="p">]</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">4</span><span class="p">]</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">1</span><span class="p">][</span><span class="mi">5</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">7</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">2</span><span class="p">][</span><span class="mi">8</span><span class="p">]</span> <span class="o">=</span> <span class="mi">1</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">6</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">3</span><span class="p">][</span><span class="mi">7</span><span class="p">]</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">4</span><span class="p">][</span><span class="mi">8</span><span class="p">]</span> <span class="o">=</span> <span class="mi">11</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">5</span><span class="p">][</span><span class="mi">7</span><span class="p">]</span> <span class="o">=</span> <span class="mi">11</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">5</span><span class="p">][</span><span class="mi">8</span><span class="p">]</span> <span class="o">=</span> <span class="mi">8</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">6</span><span class="p">][</span><span class="mi">9</span><span class="p">]</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">6</span><span class="p">][</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">7</span><span class="p">][</span><span class="mi">9</span><span class="p">]</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">7</span><span class="p">][</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="mi">3</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">8</span><span class="p">][</span><span class="mi">10</span><span class="p">]</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">8</span><span class="p">][</span><span class="mi">11</span><span class="p">]</span> <span class="o">=</span> <span class="mi">6</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">9</span><span class="p">][</span><span class="mi">12</span><span class="p">]</span> <span class="o">=</span> <span class="mi">4</span><span class="p">;</span> <span class="n">multistage_graph</span><span class="p">[</span><span class="mi">10</span><span class="p">][</span><span class="mi">12</span><span class="p">]</span> <span class="o">=</span> <span class="mi">2</span><span class="p">;</span>
	<span class="n">multistage_graph</span><span class="p">[</span><span class="mi">11</span><span class="p">][</span><span class="mi">12</span><span class="p">]</span> <span class="o">=</span> <span class="mi">5</span><span class="p">;</span>

	<span class="c1">//print_array(multistage_graph,13,13);</span>
	<span class="kt">int</span> <span class="n">distance</span><span class="o">=</span> <span class="n">shortest_path</span><span class="p">(</span><span class="n">multistage_graph</span><span class="p">,</span><span class="mi">1</span><span class="p">,</span><span class="mi">1</span><span class="p">);</span>
	<span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">distance</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>

:ET