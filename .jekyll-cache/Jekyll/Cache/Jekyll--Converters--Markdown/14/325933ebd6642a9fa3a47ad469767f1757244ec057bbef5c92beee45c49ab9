I"6
<h4 id="property">Property</h4>
<ol>
  <li>optimal substructure</li>
  <li>greedy choice property
    <ul>
      <li>locally optimal choice lead to globally solution, most of the time, itâ€™s not
tree, but sometimes it works.</li>
    </ul>
  </li>
</ol>

<pre><code class="language-code">Greedy(a, n):
    for i = 1 to n do:
    {
        x = select(a);
        if feasible(x) then:
            solution = solution + x

    }
</code></pre>

<h4 id="how-to-understand-this">How to understand this</h4>
<ol>
  <li>You want to buy the best car.
    <ul>
      <li>Strategy 1: find all the cars available in the city, and compare them all, of
course, you can find the best car, but it is time-consuming</li>
      <li>Strategy 2: First, find the car brand you like most; Second, select best known
model, then you got your best car.  Is it the best car in the city, Maybe,
manybe not, but, according to my strategy, this is the best. and <strong>This is
Greedy Strategy</strong></li>
    </ul>
  </li>
</ol>

<h4 id="application">Application</h4>
<ol>
  <li>finding minimum cost spanning tree: always select a minimum edge</li>
  <li>Dijkstra short path algorithm     : always select shortest path vertex</li>
</ol>

<h4 id="galois">Galois</h4>
<ol>
  <li>the difference between dynamic programming strategy and greedy strategy is
very obvious, dynamic programming strategy is brute force, consider every
situation.  but greedy strategy is different, it only consider limit
situation, which situation it consider, which is based on a predefined
precedure, to get optimal result. 
.</li>
</ol>
:ET