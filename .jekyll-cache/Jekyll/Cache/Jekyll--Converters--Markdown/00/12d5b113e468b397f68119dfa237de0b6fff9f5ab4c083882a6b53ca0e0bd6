I"z<h4 id="1-object-oriented-code">1. Object-oriented Code</h4>
<ol>
  <li>Create an object</li>
</ol>

<div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">add_library</span><span class="p">(</span>libA src/A.cpp<span class="p">)</span>
</code></pre></div></div>

<ol>
  <li>member function: call member function to set object property
    <ul>
      <li>act like Object-oriented programming paradigm to set the data(include path) to the object.</li>
      <li>Just like a normal Setter function.</li>
    </ul>
  </li>
</ol>

<div class="language-cmake highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">target_include_directories</span><span class="p">(</span>libA 
	public 
		$&lt;INSTALL_INTERFACE:include&gt;
		$&lt;BUILD_INTERFACE:<span class="si">${</span><span class="nv">CMAKE_CURRENT_SOURCE_DIR</span><span class="si">}</span>/include&gt;
	<span class="p">)</span>
</code></pre></div></div>

<h4 id="2-global-function">2. Global function</h4>
<ol>
  <li>install(xxx) command is a global function in cmake programming language.
    <ul>
      <li>xxx denotes different object, it may a FILES, CODE, TARGETS, SCRIPT, EXPORT.</li>
    </ul>
  </li>
</ol>

<h4 id="reference">Reference</h4>
<ol>
  <li><a href="https://cmake.org/cmake/help/latest/command/install.html">cmake install</a></li>
</ol>

:ET