I"
<h4 id="jargon">Jargon</h4>
<ol>
  <li>
    <p>$\textbf{::}$ is read as “has type of”</p>
  </li>
  <li>
    <p>Function type:</p>
  </li>
</ol>

<h4 id="type-variable">Type variable</h4>
<h4 id="typeclasses">Typeclasses</h4>
<p>A typeclass is a sort of interface that defines some behavior. If a type is a
part of a typeclass, that means that it supports and implements the behavior the
typeclass describes</p>
<ul>
  <li>A lot of people coming from OOP get confused by typeclasses because they think
they are like classes in object oriented languages. Well, they’re not.</li>
  <li>You can think of them kind of as Java interfaces, only better.</li>
</ul>

<h4 id="h">H</h4>
<ol>
  <li>$\textbf{=&gt;}$: everything before the $\textbf{=&gt;}$ is called a class
constraint</li>
</ol>

:ET