I"ó
<h4 id="introduction">Introduction</h4>
<p>Computer scientists are one of the most talented people in the world, they
create everything from scratch.</p>
<ol>
  <li>At the beginning, they want to do something with a computer, they create a
predefined procedure to let computer do the job.</li>
  <li>How to define the procedure? I think that‚Äôs all the job algorithm should do</li>
  <li>and how, please look at the tools we have array
    <ul>
      <li>array:</li>
      <li>function: also this is what we created, just assume this is in our toolbox</li>
    </ul>
  </li>
  <li>just based on array and function, we create other tools linked, list, map,
stack, heap, tree.
    <ul>
      <li>basically, all the fancy data structure is based on array and function.</li>
      <li>so how do they make it ?  they are many tricks there, but in a nutshell, all
the tricks come in one way.</li>
      <li><strong>always associate array with pointers, sometimes, you need more than one
ponters keep that in mind</strong></li>
    </ul>
  </li>
</ol>

<h4 id="problem-solution">Problem Solution</h4>
<ol>
  <li>Just like we solve math or phyics problems, we learn formula, principals, no
matter what probem we meet, we stick with our formulas.</li>
  <li>solving algorithm problem comes the same way, we know our tools, our strategy,
based on our experience, we nail them.</li>
  <li><strong>Please always draw picture</strong></li>
</ol>

<h4 id="terminology">terminology</h4>
<ol>
  <li>key: in the context of data structure, a key is a value used to identify a
certain component of a data structure.</li>
</ol>

<h4 id="notation">Notation</h4>
<p>$\leftarrow$ denotes assignment</p>

<pre><code class="language-code">Algorithm Largest Number
    Input: a list of numbers
    Output: the largest number in the list

    if L.size = 0 return null
    largest ‚Üê  L(0)
    for each item in L, do
        if item &gt; largest, then
            largest ‚Üê  item
return largest
</code></pre>

<h4 id="analyze">Analyze</h4>
<ol>
  <li>time</li>
  <li>space</li>
  <li>power</li>
</ol>

<h4 id="design">Design</h4>
<ol>
  <li>Optimization Problem
    <ul>
      <li>greedy method</li>
      <li>dynamic programming</li>
      <li>branch and bound</li>
    </ul>
  </li>
</ol>

<h4 id="difference-between-algorithm-and-programming-language">Difference between Algorithm and Programming Language</h4>
<ol>
  <li>design        implementation</li>
  <li>any language  programming language</li>
  <li>analyse       testing</li>
  <li>Hardware Independent   hardware dependent</li>
</ol>

<h4 id="galois">Galois</h4>
<ol>
  <li>If you know Chinese, ‚ÄúÊ†ë‚Äù means tree; If you know japanese,‚Äô„Åç‚Äô means tree;
If you can draw, probably you can draw a picture, and everyone knows it is a tree.
but how could a computer knows a tree.</li>
  <li>computer representation is very interesting, it‚Äôs fun. Suppose the only two
things we have is array and linked list, given these two things, How should
we reprsent a tree, how should we represent a graph, a stack, a queue, a heap?</li>
  <li>It‚Äôs fun!!!</li>
  <li>The only thing that I learn from algorithm, draw picture, draw the procedure,
it‚Äôs better for everything.</li>
</ol>

:ET