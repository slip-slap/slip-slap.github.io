I"
<h4 id="1-regular-language">1. Regular language</h4>
<ol>
  <li>\w 数字0-9，字母a-z及A-Z，下划线 <font color="red">因为在编程语言中，数字的命名都是数字字母下划线</font></li>
  <li>\W 非\w</li>
  <li>. 除去换行符以外的任意字符</li>
  <li>[] 字符范围</li>
  <li>[^…] 字符范围以外</li>
  <li>^ 行首</li>
  <li>$ 行尾</li>
  <li>()  分组, 并记录匹配到的字符串</li>
  <li>\n  使用分组符(x)匹配到的字符串
    <h5 id="11--repeat">1.1  repeat</h5>
  </li>
  <li>x* x+ 贪婪匹配</li>
  <li>x* x+? 非贪婪匹配</li>
  <li>x?      出现0次或一次</li>
  <li>(?:x) 仅分组</li>
</ol>

<h4 id="2-awk">2. Awk</h4>
<h4 id="分割符">分割符</h4>
<p>-F field-separator(默认为空格)</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">awk</span> <span class="nt">-F</span> <span class="s1">':'</span> <span class="s1">'{print $3}'</span> /etc/passwd
</code></pre></div></div>

<h4 id="feature">feature</h4>

<ol>
  <li>the ability to filter text in a pipeline which particularly distinguishes it from other types of editors</li>
</ol>

<h4 id="语法">语法</h4>

<p>命令行格式</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="o">[</span>options] <span class="s1">'command'</span> file<span class="o">(</span>s<span class="o">)</span>
<span class="c"># options: -e; -n; -i</span>
<span class="c"># -n: suppress automatic printing of **pattern space**</span>
<span class="c"># what's the crap, what's the pattern space ? it's every text line that the sed command take in</span>
<span class="c"># command: 行定位(正则)+sed命令</span>
<span class="c">#  行定位可以使用行号,或者正则</span>
<span class="c"># 定位一行: x; /pattern/</span>
<span class="c"># 定位几行: x,y; /pattern/,/pattern/;</span>
<span class="c"># 反向选择: x,y!</span>
<span class="c"># 间隔行: first~step</span>
</code></pre></div></div>

<hr />

<h5 id="增删改查">增删改查</h5>

<ol>
  <li>a 在指定行之后插入</li>
</ol>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">nl </span>passwd | <span class="nb">sed</span> <span class="nt">-n</span> <span class="s1">'1,3a ========================'</span>
</code></pre></div></div>

<ol>
  <li>i在指定行之间插入</li>
</ol>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">nl </span>passwd | <span class="nb">sed</span> <span class="nt">-n</span> <span class="s1">'1,3i ========================'</span>
</code></pre></div></div>

<ol>
  <li>替换指定行</li>
</ol>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">nl </span>passwd | <span class="nb">sed</span> <span class="nt">-n</span> <span class="s1">'1,3c  ========================'</span>
</code></pre></div></div>

<h5 id="替换行内容">替换行内容</h5>

<p>这是sed核心的命令</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># 在使用替换命令的时候，注意参数的设置</span>
<span class="nb">cat </span>temp | <span class="nb">grep</span> <span class="s1">'slipslap'</span> | <span class="nb">sed</span> <span class="s1">'s/slipslap//'</span> | <span class="nb">sed</span> <span class="s1">'s/\/.*est//'</span> | <span class="nb">sed</span> <span class="s1">'s/13.*//'</span>

<span class="c"># batch substitution</span>
<span class="c"># find the target</span>
<span class="nb">sed</span> <span class="nt">-n</span> <span class="s1">'/category: "statitics"/p'</span> <span class="k">*</span>
<span class="c"># replace the target</span>
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'s/category: "statitics"/category: "math"/'</span> <span class="k">*</span>
<span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'1,9c --- \nlayout: post \ntitle: "C++: Vim" \nkeywords: []
\ndescription: \ncategory: "code" \ntags: ["c++"] \n--- \n


'</span> <span class="k">*</span>
</code></pre></div></div>

<p>####</p>

<p>脚本格式</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-f</span> scripgfile file<span class="o">(</span>s<span class="o">)</span>
</code></pre></div></div>

<h4 id="版本差异">版本差异</h4>
<ol>
  <li>in practice, you can discard the BSD based command, actually I prefer GNU style command</li>
  <li>
    <p>For mac system, when you use -i parameter, you have to provide an extension for your backups.</p>
  </li>
  <li>
    <p>explaination based on BSD platform such as Maca <br />
i extension
Edit files in-place, saving backups with the specified extension.  If a zero-length extension is given, no backup will be saved.  It is not recommended to give a zero-length extension when in-place editing files, as you risk corruption or partial content in situations where disk space is exhausted, etc.</p>
  </li>
  <li>explatination based on GNU/linux platform such as Redhat <br />
-i[SUFFIX], –in-place[=SUFFIX]
edit files in place (makes backup if SUFFIX supplied)</li>
</ol>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-i</span> <span class="s1">'jjj'</span>  <span class="s1">'1,5d'</span> 2016-08-01-python-intro.md
</code></pre></div></div>
<h3 id="grep">grep</h3>
<p>grep命令是一种强大的文本搜索工具，使用正则表达式搜索文本，并把匹配的行打印处理</p>
<h4 id="语法-1">语法</h4>
<p>grep [option] pattern file</p>
<h4 id="参数">参数</h4>
<ol>
  <li>-c  –count    计算符合样式的列数</li>
</ol>

<h3 id="sed">sed</h3>
<p>文本行处理，增，删，替</p>
<hr />

<h4 id="语法-2">语法</h4>
<ol>
  <li>sed [options] ‘command’ file 命令行格式</li>
  <li>sed -f script file 脚本格式
    <h4 id="参数-1">参数</h4>
  </li>
  <li>-n by default, each line of input is echoed to the standard output after all of the commands have been applied to it, the suppresses this behavior</li>
</ol>

<h4 id="print-every-nth-line">print every Nth line</h4>

<p>copy every 5th line of oldfile to new file</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">sed</span> <span class="nt">-n</span> <span class="s1">'0~Np'</span> oldfile <span class="o">&gt;</span> new file
</code></pre></div></div>

:ET