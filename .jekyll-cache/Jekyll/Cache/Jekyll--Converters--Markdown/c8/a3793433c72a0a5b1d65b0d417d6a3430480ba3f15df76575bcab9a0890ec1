I"‡
<h4 id="purposed">Purposed</h4>
<p>Using hooks, you plugin can exercise fine-grained control over various aspects
of the build process.</p>
<ul>
  <li>If your plugin defines any hooks, Jekyll will call them at pre-defined points.</li>
</ul>

<h4 id="method">Method</h4>
<ol>
  <li>Hooks are registered to an owner and an event name. to register one
    <ul>
      <li>You call <em>Jekyll::Hooks.register</em>, and pass the hook owner, event name, and
code to call whenever the hookis triggered.</li>
      <li>For example, if you want to execute some custom functionality every time Jekyll renders a page, you could register a hook like this:</li>
    </ul>
  </li>
</ol>

<div class="language-ruby highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="no">Jekyll</span><span class="ss">:Hooks</span><span class="p">.</span><span class="nf">register</span> <span class="ss">:pages</span><span class="p">,</span> <span class="ss">:post_render</span> <span class="k">do</span> <span class="o">|</span><span class="n">page</span><span class="o">|</span>
	<span class="c1"># code to call after Jekyll renders a page</span>
<span class="k">end</span>
</code></pre></div></div>

<h4 id="reference">Reference</h4>
<ol>
  <li><a href="2017-12-08-pl-jekyll-summary.md">official website of Jekyll</a></li>
  <li><a href="https://jekyllrb.com/docs/plugins/hooks/">Hooks in Jekyll</a></li>
</ol>
:ET