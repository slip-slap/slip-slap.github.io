I"0
<h4 id="drawback-of-queue">Drawback of Queue</h4>
<ol>
  <li>For a queue, it has two pointers, front and rear, front is for deletion, and
rear for insertion.</li>
  <li>the problem is we can only use the array for one time.</li>
</ol>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code>
<span class="cp">#include &lt;iostream&gt;
#include &lt;vector&gt;
</span>
<span class="k">class</span> <span class="nc">my_queue</span>
<span class="p">{</span>
	<span class="nl">private:</span>
		<span class="kt">int</span> <span class="n">front</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">rear</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
		<span class="kt">int</span> <span class="n">size</span> <span class="o">=</span> <span class="mi">7</span><span class="p">;</span>
		<span class="c1">//static const int size = 7; this programmr will behave  very weired</span>
		<span class="kt">int</span> <span class="n">int_array</span><span class="p">[</span><span class="mi">7</span><span class="p">];</span>
	<span class="nl">public:</span> 
		<span class="kt">bool</span> <span class="n">is_empty</span><span class="p">()</span>
		   <span class="p">{</span>
		    <span class="k">if</span><span class="p">(</span><span class="n">front</span> <span class="o">==</span> <span class="n">rear</span><span class="p">)</span>
			   <span class="p">{</span> 
				   <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
			   <span class="p">}</span>
			<span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
		   <span class="p">}</span>

		<span class="kt">bool</span> <span class="n">is_full</span><span class="p">()</span>
			<span class="p">{</span>
					<span class="k">if</span><span class="p">(</span><span class="k">this</span><span class="o">-&gt;</span><span class="n">rear</span> <span class="o">&gt;</span> <span class="k">this</span><span class="o">-&gt;</span><span class="n">size</span><span class="o">-</span><span class="mi">1</span><span class="p">)</span>
				    <span class="p">{</span> 
					   <span class="k">return</span> <span class="nb">true</span><span class="p">;</span>
				    <span class="p">}</span>
				<span class="k">return</span> <span class="nb">false</span><span class="p">;</span>
			<span class="p">}</span>

		<span class="kt">void</span> <span class="n">enque</span><span class="p">(</span><span class="kt">int</span> <span class="n">x</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="n">rear</span><span class="o">++</span><span class="p">;</span>
			<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">is_full</span><span class="p">())</span>
			<span class="p">{</span>
				<span class="n">int_array</span><span class="p">[</span><span class="n">rear</span><span class="p">]</span> <span class="o">=</span> <span class="n">x</span><span class="p">;</span>
				<span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">rear</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>
		
		<span class="kt">void</span> <span class="n">deque</span><span class="p">()</span>
		<span class="p">{</span>
			<span class="k">if</span><span class="p">(</span><span class="o">!</span><span class="n">is_empty</span><span class="p">())</span>
			<span class="p">{</span>
				<span class="n">int_array</span><span class="p">[</span><span class="n">front</span><span class="p">]</span> <span class="o">=</span> <span class="o">-</span><span class="mi">1</span><span class="p">;</span>
				<span class="n">front</span> <span class="o">=</span> <span class="n">front</span><span class="o">+</span><span class="mi">1</span><span class="p">;</span>
			<span class="p">}</span>
		<span class="p">}</span>

		<span class="kt">void</span> <span class="n">display</span><span class="p">()</span>
		<span class="p">{</span>
			<span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span><span class="o">=</span><span class="n">front</span><span class="p">;</span><span class="n">i</span><span class="o">&lt;</span><span class="n">rear</span><span class="p">;</span><span class="n">i</span><span class="o">++</span><span class="p">)</span>
			<span class="p">{</span>
				<span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">int_array</span><span class="p">[</span><span class="n">i</span><span class="o">+</span><span class="mi">1</span><span class="p">];</span>
			<span class="p">}</span>
		    <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
		<span class="p">}</span>

<span class="p">};</span>


<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">my_queue</span> <span class="n">q1</span><span class="p">;</span>
	<span class="n">q1</span><span class="p">.</span><span class="n">is_empty</span><span class="p">();</span>
	<span class="n">q1</span><span class="p">.</span><span class="n">enque</span><span class="p">(</span><span class="mi">7</span><span class="p">);</span> <span class="n">q1</span><span class="p">.</span><span class="n">enque</span><span class="p">(</span><span class="mi">8</span><span class="p">);</span> <span class="n">q1</span><span class="p">.</span><span class="n">enque</span><span class="p">(</span><span class="mi">13</span><span class="p">);</span> <span class="n">q1</span><span class="p">.</span><span class="n">enque</span><span class="p">(</span><span class="mi">4</span><span class="p">);</span> <span class="n">q1</span><span class="p">.</span><span class="n">enque</span><span class="p">(</span><span class="mi">5</span><span class="p">);</span>
	<span class="n">q1</span><span class="p">.</span><span class="n">enque</span><span class="p">(</span><span class="mi">1</span><span class="p">);</span> <span class="n">q1</span><span class="p">.</span><span class="n">enque</span><span class="p">(</span><span class="mi">3</span><span class="p">);</span>
	<span class="n">q1</span><span class="p">.</span><span class="n">display</span><span class="p">();</span>
	<span class="n">q1</span><span class="p">.</span><span class="n">deque</span><span class="p">();</span>
	<span class="n">q1</span><span class="p">.</span><span class="n">display</span><span class="p">();</span>
<span class="p">}</span>

</code></pre></div></div>

:ET