I"\
<h4 id="why-this-crap-">Why this crap ?</h4>
<ol>
  <li>we have linear search, its time complexity is $\Theta (n)$</li>
  <li>we have binary search, its time complexity is $log_2^n$</li>
  <li>The problem is: we need more, we don’t satisify with the current situation,
we need more, how about constant time, can we do it? give it a shot.</li>
  <li>The solution is <strong>hashing</strong> !!! Just constant time, are you excited ? let’s
began our journey.</li>
</ol>

<h4 id="type">Type</h4>
<ol>
  <li>Open Hashing
    <ul>
      <li>Chaining</li>
    </ul>
  </li>
  <li>Closed Hashing
    <ul>
      <li>Open Addressing</li>
      <li>Linear Probing</li>
      <li>Duadratic Probing</li>
      <li>Double Hashing</li>
    </ul>
  </li>
  <li>simple uniform hashing</li>
</ol>

<p>####</p>
<ol>
  <li>Expected length of chain for k keys, m slots:  n over m, called $\alpha$, the
load factor of the table.</li>
</ol>

<h4 id="galois">Galois</h4>
<ol>
  <li>Hashing is from key to location, then we put something on the location.</li>
  <li>How to design hash function is the most important thing.</li>
</ol>

:ET