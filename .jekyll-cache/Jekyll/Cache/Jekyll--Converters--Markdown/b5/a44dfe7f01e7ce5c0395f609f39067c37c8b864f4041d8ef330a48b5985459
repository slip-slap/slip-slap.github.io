I"¶
<h4 id="jargon">Jargon</h4>
<ol>
  <li>Haskell function definition consist of the name of the function followed by
formal parameters.</li>
  <li>The body of the function follows the equal sign, the body of a function is
always an expression, there are no statements in functions. The result of a
function is this expression.</li>
</ol>

<h4 id="example">Example</h4>

<div class="language-haskell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">double</span> <span class="n">x</span> <span class="o">=</span> <span class="n">x</span> <span class="o">+</span> <span class="n">x</span>
</code></pre></div></div>

<ol>
  <li>The function name is followed by parameters separated by spaces.</li>
  <li>When defining functions, thereâ€™s $\textbf{=}$ and after that we define what
the function does.</li>
</ol>

<h4 id="pattern">Pattern</h4>
<p>You can define separate function bodies for different patterns.</p>

<div class="language-haskell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">lucky</span> <span class="o">::</span> <span class="p">(</span><span class="kt">Integral</span> <span class="n">a</span><span class="p">)</span> <span class="o">=&gt;</span> <span class="n">a</span> <span class="o">-&gt;</span> <span class="kt">String</span>
<span class="n">lucky</span> <span class="mi">7</span> <span class="o">=</span> <span class="s">"LUCKY NUMBER SEVEN!"</span>
<span class="n">lucky</span> <span class="n">x</span> <span class="o">=</span> <span class="s">"sorry"</span>
</code></pre></div></div>

<ol>
  <li>When you call $\textbf{lucky}$, the patterns will be checked from top to bottom
and when it conforms to a pattern, the corresponding function body will be
used.</li>
</ol>

<h4 id="guards">Guards</h4>
<ol>
  <li>Whereas patterns are a way of making sure a value conforms to some form and
deconstructing it, guards are a way of testing whether some property of a
value(or several of them) are true of false.</li>
  <li>That sounds a lot like an if statement and itâ€™s very similar.</li>
  <li>The things is that guards are a lot more readable when you have serveral
condtitions and they play really nicely with patterns.</li>
</ol>

:ET