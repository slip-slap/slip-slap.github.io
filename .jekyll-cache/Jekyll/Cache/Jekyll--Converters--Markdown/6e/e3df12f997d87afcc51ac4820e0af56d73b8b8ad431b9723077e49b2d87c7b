I"¤
<h4 id="a">A</h4>
<ol>
  <li>operoator overload just a special function name;</li>
</ol>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;iostream&gt;
</span>
<span class="k">class</span> <span class="nc">complex_number</span>
<span class="p">{</span>

	<span class="nl">private:</span>
		<span class="kt">int</span> <span class="n">actual_part</span><span class="p">;</span> 
        <span class="kt">int</span> <span class="n">virtual_part</span><span class="p">;</span>

    <span class="nl">public:</span>
		<span class="n">complex_number</span><span class="p">()</span>
		<span class="p">{}</span>

		<span class="n">complex_number</span><span class="p">(</span><span class="kt">int</span> <span class="n">actual_part</span><span class="p">,</span> <span class="kt">int</span> <span class="n">virtual_part</span><span class="p">)</span>
		<span class="p">{</span>
			<span class="k">this</span><span class="o">-&gt;</span><span class="n">actual_part</span> <span class="o">=</span> <span class="n">actual_part</span><span class="p">;</span>
			<span class="k">this</span><span class="o">-&gt;</span><span class="n">virtual_part</span> <span class="o">=</span> <span class="n">virtual_part</span><span class="p">;</span>
		<span class="p">}</span>

		<span class="kt">void</span> <span class="n">print</span><span class="p">()</span>
		<span class="p">{</span>
			<span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">actual_part</span><span class="o">&lt;&lt;</span><span class="s">"+"</span><span class="o">&lt;&lt;</span><span class="n">virtual_part</span><span class="o">&lt;&lt;</span><span class="s">"i"</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
		<span class="p">}</span>
<span class="k">friend</span> <span class="n">complex_number</span> <span class="k">operator</span><span class="o">+</span><span class="p">(</span><span class="n">complex_number</span> <span class="n">a</span><span class="p">,</span> <span class="n">complex_number</span> <span class="n">b</span><span class="p">);</span>
<span class="p">};</span>

<span class="n">complex_number</span> <span class="k">operator</span><span class="o">+</span><span class="p">(</span><span class="n">complex_number</span> <span class="n">a</span><span class="p">,</span> <span class="n">complex_number</span> <span class="n">b</span><span class="p">)</span>
<span class="p">{</span>
	<span class="n">complex_number</span> <span class="n">c</span><span class="p">;</span>
	<span class="n">c</span><span class="p">.</span><span class="n">actual_part</span> <span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">actual_part</span> <span class="o">+</span> <span class="n">b</span><span class="p">.</span><span class="n">actual_part</span><span class="p">;</span>
	<span class="n">c</span><span class="p">.</span><span class="n">virtual_part</span><span class="o">=</span> <span class="n">a</span><span class="p">.</span><span class="n">virtual_part</span> <span class="o">+</span> <span class="n">b</span><span class="p">.</span><span class="n">virtual_part</span><span class="p">;</span>
	<span class="k">return</span> <span class="n">c</span><span class="p">;</span>
<span class="p">}</span>


<span class="kt">int</span> <span class="nf">main</span><span class="p">()</span>
<span class="p">{</span>
	<span class="n">complex_number</span> <span class="n">c1</span><span class="p">(</span><span class="mi">2</span><span class="p">,</span><span class="mi">3</span><span class="p">);</span>
	<span class="n">complex_number</span> <span class="n">c2</span><span class="p">(</span><span class="mi">7</span><span class="p">,</span><span class="mi">4</span><span class="p">);</span>
	<span class="n">complex_number</span> <span class="n">c3</span> <span class="o">=</span> <span class="n">c1</span> <span class="o">+</span> <span class="n">c2</span><span class="p">;</span>
	<span class="n">complex_number</span> <span class="n">c4</span> <span class="o">=</span> <span class="k">operator</span><span class="o">+</span><span class="p">(</span><span class="n">c1</span><span class="p">,</span><span class="n">c2</span><span class="p">);</span>
	<span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</code></pre></div></div>
:ET