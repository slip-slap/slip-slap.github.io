I"°
<p>###</p>
<ol>
  <li>Processes executing concurrently in the operating system maybe either
independent processes or cooperating processes.</li>
</ol>

<ul>
  <li>Independent processes: They cannot affect or be affected by the other
processes executing in the system.</li>
  <li>Cooperating processes: They can affect or be affected by the other processes
executing in the system.</li>
</ul>

<h3 id="ipc-method">IPC Method</h3>
<ol>
  <li>Shared memory: In the shared-memory model, a region of memory that is shared
by cooperating processes is established. Processes can then exchange
information by reading and writing data to the shared region.</li>
  <li>Message passing: In the messaging model, communication takes place by means
of messages exchanged between the cooperating processes.</li>
</ol>

<h4 id="message-passing-systems">Message Passing Systems</h4>
<ol>
  <li>If processes P and Q want to communicate, they must send messages to and
receive messages from each other.
    <ul>
      <li>a communicationt link must exist between them.</li>
      <li>this link can be implemented in a variety of ways. there are several methods
for logically implementing a link and send() /receive() operations, like:</li>
    </ul>
  </li>
</ol>

<h5 id="direct-or-indirect-communication">Direct or indirect communication.</h5>
<h5 id="synchronous-or-asynchronous-commninication">Synchronous or asynchronous commninication</h5>
<h5 id="automatic-or-explicit-buffering">automatic or explicit buffering</h5>

<h3 id="galois">Galois</h3>
<ol>
  <li>For a long time, I was confused the problem such as consumer and producer
problem, multithread problem.</li>
  <li>In nature, they are just IPC problems.</li>
</ol>

:ET