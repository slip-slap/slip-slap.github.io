I"<p>#include<iostream>
class Student{
	public:
		Student(const char*  m_name){
			std::cout&lt;&lt;"create"&lt;&lt;std::endl;
		}
		Student(const Student&amp; other){
			std::cout&lt;&lt;"copy"&lt;&lt;std::endl;
		}</iostream></p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>	Student(Student&amp;&amp; other){
		std::cout&lt;&lt;"move"&lt;&lt;std::endl;
	}
	~Student(){
	} };
</code></pre></div></div>

<p>int main()
{
	Student jenifer(“noone”);
	// call copy constructor, because jenifer is a left value
	Student  william = jenifer;
	// call move constructor, because Student(“zhang”) is a right value
	Student robert(Student(“zhang”));
	std::cout«”#################”«std::endl;</p>

<p>}</p>

:ET