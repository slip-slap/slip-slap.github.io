I"e	
<h4 id="type-punning">Type Punning</h4>

<h4 id="reinterpret_cast">reinterpret_cast</h4>
<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kt">int</span> <span class="n">id</span> <span class="o">=</span> <span class="k">reinterpret_cast</span><span class="o">&lt;</span><span class="kt">int</span><span class="o">&gt;</span><span class="p">(</span><span class="o">&amp;</span><span class="n">obj</span><span class="p">);</span>
</code></pre></div></div>

<h4 id="dynamic_cast">dynamic_cast</h4>
<p>dynamic_cast is a corresponding of isinstance of Python in c++.</p>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="k">if</span><span class="p">(</span><span class="n">NewType</span><span class="o">*</span> <span class="n">v</span><span class="o">=</span><span class="k">dynamic_cast</span><span class="o">&lt;</span><span class="n">NewType</span><span class="o">*&gt;</span><span class="p">(</span><span class="n">old</span><span class="p">)){</span>
	<span class="c1">//old was safely casted to NewType</span>
	<span class="n">v</span><span class="o">-&gt;</span><span class="n">doSomthing</span><span class="p">();</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="the-swiss-knife">The Swiss knife</h4>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;sstream&gt;
#include &lt;string&gt;
</span><span class="n">std</span><span class="o">::</span><span class="n">stringstream</span> <span class="n">ss</span><span class="p">;</span>
<span class="n">ss</span><span class="o">&lt;&lt;</span><span class="mi">4</span><span class="p">;</span>
<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">address</span><span class="p">;</span>
<span class="n">ss</span><span class="o">&gt;&gt;</span><span class="n">address</span><span class="p">;</span>
</code></pre></div></div>

<h4 id="reference">Reference</h4>
<ol>
  <li><a href="https://stackoverflow.com/questions/500493/c-equivalent-of-javas-instanceof">C++ equivalent of javaâ€™s instanceof</a></li>
  <li><a href="https://www.youtube.com/watch?v=8egZ_5GA9Bc">Type punning</a></li>
  <li><a href="http://www.cplusplus.com/reference/sstream/stringstream/stringstream/">stringstream</a></li>
</ol>
:ET