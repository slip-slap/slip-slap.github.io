I"Ú	<h4 id="introduction">Introduction</h4>
<p>Shell maintains a body of information during our shell session called the
environment. Data stored in the environment is used by programs to determine
facts about our configuration.</p>

<h4 id="environment-established">Environment Established</h4>
<ol>
  <li>When we log to the system, the <strong>bash</strong> program starts, and reads a series of
configuration scripts called startup files, which define the default
environemnt shared by all users.</li>
  <li>This is followed by more startup files in our home directory that define our
personal environment. The exact sequence depends on the type of shell session
being started.</li>
  <li>There are tow kinds: a login shell session and a non-log-in shell session.</li>
</ol>

<h4 id="design">Design</h4>
<ol>
  <li>The philosophy of shell script arise from UNIX. <strong>Breaking complex tasks into
simpler subtasks</strong></li>
  <li>So the grammar in shell script seems very weird just because the way it
works.</li>
</ol>

<h4 id="galois">Galois</h4>
<ol>
  <li>The role of <strong>blank space</strong> is completely different from other language, itâ€™s like
you go to another country, you canâ€™t understand their language. You canâ€™t
understand why they talk that way over this way. You confused.</li>
  <li>bash interpreter treat every blank space as command delimiter. You have to
following this row.</li>
</ol>

<h4 id="example-1">Example 1</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">ls</span> - l
<span class="c"># this doesn't make sense, because bash interpreter will treat "-" and "l" as</span>
commaners, but the interpreter has no idea what <span class="k">do </span>they mean.
</code></pre></div></div>

<h4 id="example-2">Example 2</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c">#if [ $1 -gt 100]   </span>
<span class="c"># it doesn't make sense</span>
<span class="c"># interpreter will treat "100]" as command.</span>
<span class="k">if</span> <span class="o">[</span> <span class="nv">$1</span> <span class="nt">-gt</span> 100 <span class="o">]</span>
<span class="k">then
	</span><span class="nb">echo</span> <span class="s2">"this a large number"</span>
<span class="k">fi</span>
</code></pre></div></div>

<h4 id="reference">Reference</h4>
<ol>
  <li><a href="https://linux.die.net/abs-guide/why-shell.html">Why shell programming</a></li>
</ol>

:ET