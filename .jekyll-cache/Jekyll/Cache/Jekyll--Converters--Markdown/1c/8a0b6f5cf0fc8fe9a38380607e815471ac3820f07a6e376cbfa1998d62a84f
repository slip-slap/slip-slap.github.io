I"F
<h4 id="socket阻塞">socket阻塞</h4>
<p>服务器端的阻塞有两种<br /></p>
<ol>
  <li>ServerSocket的accept方法会产生阻塞</li>
  <li>文件的io会产生阻塞</li>
</ol>
<hr />

<div class="language-java highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//客户端请求</span>
<span class="kd">public</span> <span class="kd">class</span> <span class="nc">Client</span> <span class="o">{</span>

    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">getAsset</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span><span class="o">,</span> <span class="nc">InterruptedException</span> <span class="o">{</span>
        <span class="nc">Socket</span> <span class="n">socket</span><span class="o">=</span><span class="k">new</span> <span class="nc">Socket</span><span class="o">(</span><span class="s">"127.0.0.1"</span><span class="o">,</span><span class="mi">8089</span><span class="o">);</span>
        <span class="nc">OutputStream</span> <span class="n">outputStream</span><span class="o">=</span><span class="n">socket</span><span class="o">.</span><span class="na">getOutputStream</span><span class="o">();</span>
        <span class="n">socket</span><span class="o">.</span><span class="na">close</span><span class="o">();</span>
        <span class="nc">Thread</span><span class="o">.</span><span class="na">sleep</span><span class="o">(</span><span class="mi">50000</span><span class="o">);</span>
        <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"over"</span><span class="o">);</span>

    <span class="o">}</span>
<span class="o">}</span>
<span class="c1">//服务器端</span>
    <span class="kd">public</span> <span class="kt">void</span> <span class="nf">listen</span><span class="o">()</span> <span class="kd">throws</span> <span class="nc">IOException</span><span class="o">,</span> <span class="nc">InterruptedException</span><span class="o">,</span> <span class="nc">ExecutionException</span> <span class="o">{</span>
		
        <span class="nc">ServerSocket</span> <span class="n">serverSocket</span><span class="o">=</span><span class="k">new</span> <span class="nc">ServerSocket</span><span class="o">(</span><span class="mi">8089</span><span class="o">);</span>

        <span class="k">while</span> <span class="o">(</span><span class="kc">true</span><span class="o">){</span>
			<span class="c1">//产生阻塞</span>
            <span class="nc">Socket</span> <span class="n">clientSocket</span><span class="o">=</span><span class="n">serverSocket</span><span class="o">.</span><span class="na">accept</span><span class="o">();</span>
			<span class="c1">//不会阻塞</span>
            <span class="nc">InputStream</span> <span class="n">inputStream</span><span class="o">=</span><span class="n">clientSocket</span><span class="o">.</span><span class="na">getInputStream</span><span class="o">();</span>
            <span class="kt">byte</span><span class="o">[]</span> <span class="n">bytes</span><span class="o">=</span><span class="k">new</span> <span class="kt">byte</span><span class="o">[</span><span class="mi">4</span><span class="o">];</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"阻塞"</span><span class="o">);</span>
			<span class="c1">//会阻塞，等待客户端发送io流发送终止信号</span>
            <span class="n">inputStream</span><span class="o">.</span><span class="na">read</span><span class="o">(</span><span class="n">bytes</span><span class="o">);</span>
            <span class="nc">System</span><span class="o">.</span><span class="na">out</span><span class="o">.</span><span class="na">println</span><span class="o">(</span><span class="s">"hello world! no blocking"</span><span class="o">);</span>
        <span class="o">}</span>
    <span class="o">}</span>
</code></pre></div></div>
:ET