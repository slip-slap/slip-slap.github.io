I"I
<h3 id="文件系统库">文件系统库</h3>

<ul>
  <li>头文件&lt;boost/filesystem.hpp&gt;提供对文件系统的重要操作，它定义了path类，是filesystem库的基础</li>
  <li>头文件&lt;boost/filesystem/fstream.hpp&gt;是对std::fstream的一个补充。</li>
</ul>

<h4 id="path类">path类</h4>
<p>path类是最重要的类，相当于opencv的Mat类</p>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c1">//如果下面有googletest目录，可以直接进行拼接</span>
<span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">path</span> <span class="n">full_path</span><span class="o">=</span><span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">current_path</span><span class="p">()</span><span class="o">/</span><span class="s">"googletest"</span><span class="p">;</span>
</code></pre></div></div>

<font color="red">获得当前文件路径与文件名</font>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">path</span> <span class="n">file_path</span><span class="o">=</span><span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">current_path</span><span class="p">();</span><span class="c1">///*/*/a.txt</span>
<span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">filename</span><span class="o">=</span><span class="n">file_path</span><span class="p">.</span><span class="n">filename</span><span class="p">().</span><span class="n">string</span><span class="p">();</span><span class="c1">//a.txt</span>
</code></pre></div></div>
<font color="red">遍历当前目录下的子文件</font>
<div class="language-c++ highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">#include &lt;boost/filesystem.hpp&gt;
</span><span class="kt">void</span> <span class="nf">readFile</span><span class="p">(){</span>
	<span class="c1">//获取当前目录</span>
    <span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">path</span> <span class="n">full_path</span><span class="o">=</span><span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">current_path</span><span class="p">();</span>
    <span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">directory_iterator</span> <span class="n">end_iter</span><span class="p">;</span>
    <span class="n">boost</span><span class="o">::</span><span class="n">filesystem</span><span class="o">::</span><span class="n">directory_iterator</span> <span class="n">itr</span><span class="p">(</span><span class="n">full_path</span><span class="p">);</span>
    <span class="k">for</span><span class="p">(;</span><span class="n">itr</span><span class="o">!=</span><span class="n">end_iter</span><span class="p">;</span><span class="n">itr</span><span class="o">++</span><span class="p">){</span>
        <span class="n">std</span><span class="o">::</span><span class="n">vector</span><span class="o">&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">string</span><span class="o">&gt;</span> <span class="n">vec</span><span class="p">;</span>
        <span class="n">std</span><span class="o">::</span><span class="n">string</span> <span class="n">file_name</span><span class="o">=</span><span class="n">itr</span><span class="o">-&gt;</span><span class="n">path</span><span class="p">().</span><span class="n">filename</span><span class="p">().</span><span class="n">string</span><span class="p">();</span>
        <span class="n">std</span><span class="o">::</span><span class="n">cout</span><span class="o">&lt;&lt;</span><span class="n">file_name</span><span class="o">&lt;&lt;</span><span class="n">std</span><span class="o">::</span><span class="n">endl</span><span class="p">;</span>
    <span class="p">}</span>
<span class="p">}</span>
</code></pre></div></div>

<h4 id="boost-and-cmake">Boost and CMake</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>cmake_minimum_required<span class="o">(</span>VERSION 3.10<span class="o">)</span>
project<span class="o">(</span>foo VERSION 1.0<span class="o">)</span>
<span class="nb">set</span><span class="o">(</span>CMAKE_CXX_STANDARD 11<span class="o">)</span>
<span class="c">#if cmake find target component, it would print some information in the</span>
<span class="c">#terminal.</span>
find_package<span class="o">(</span>Boost 1.72.0 COMPONENTS locale<span class="o">)</span>
include_directories<span class="o">(</span><span class="k">${</span><span class="nv">Boost_INCLUDES_DIRS</span><span class="k">}</span><span class="o">)</span>
add_executable<span class="o">(</span>demo reference.cpp<span class="o">)</span>
target_link_libraries<span class="o">(</span>demo <span class="k">${</span><span class="nv">Boost_LIBRARIES</span><span class="k">}</span><span class="o">)</span>
</code></pre></div></div>

:ET