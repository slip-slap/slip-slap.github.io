I"%

<h4 id="vertex-and-edge">Vertex and Edge</h4>
<p>In the BGL, vertices and edges are manipulated through opaque handles called
<em>vertex descriptors</em> and <em>edge descriptors</em>.</p>
<ul>
  <li>The descriptor types for a graph type are always accessible through the
<em>graph_traits</em> class.</li>
</ul>

<div class="language-cpp highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">boost</span><span class="o">::</span><span class="n">adjacency_list</span><span class="o">&lt;&gt;::</span><span class="n">vertex_descriptor</span> <span class="n">v</span> <span class="o">=</span> <span class="n">add_vertex</span><span class="p">(</span><span class="n">G</span><span class="p">);</span>
<span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">boost</span><span class="o">::</span><span class="n">adjacency_list</span><span class="o">&lt;&gt;::</span><span class="n">edge_descriptor</span><span class="p">,</span> <span class="kt">bool</span><span class="o">&gt;</span> <span class="n">p</span> <span class="o">=</span> <span class="n">add_edge</span><span class="p">(</span><span class="mi">1</span><span class="p">,</span><span class="mi">2</span><span class="p">,</span><span class="n">G</span><span class="p">);</span>
<span class="n">std</span><span class="o">::</span><span class="n">pair</span><span class="o">&lt;</span><span class="n">boost</span><span class="o">::</span><span class="n">adjacency_list</span><span class="o">&lt;&gt;::</span><span class="n">vertex_iterator</span><span class="p">,</span> <span class="n">boost</span><span class="o">::</span><span class="n">adjacency_list</span><span class="o">&lt;&gt;::</span><span class="n">vertex_iterator</span><span class="o">&gt;</span> <span class="n">p</span> <span class="o">=</span> <span class="n">vertices</span><span class="p">(</span><span class="n">G</span><span class="p">);</span>
</code></pre></div></div>

<h4 id="graph-traversal">Graph Traversal</h4>
<p>The graph abstraction consists of several different kinds of collections:
the vertices and edges for the graph and the out-edges, in-edges, and adjacent
vertices for each vertex.  There are five kinds of graph iterators, one for each
kind of collection:</p>

<ol>
  <li>A <em>vertex iterator</em> is used to traverse all the vertices of a graph. The
value type of a vertex iterator is a vertex descripter.</li>
  <li>An <em>edge iterator</em> is used to traverse all the edges of a graph. The value
type of this iterator is an edge descriptor.</li>
</ol>
:ET