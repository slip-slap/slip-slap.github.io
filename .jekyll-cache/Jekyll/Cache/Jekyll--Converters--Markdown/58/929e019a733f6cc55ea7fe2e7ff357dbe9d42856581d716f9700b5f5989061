I"5

<h4 id="1-create-a-repository">1. Create a repository</h4>

<h5 id="11-git-init">1.1 git init</h5>
<h5 id="12-git-clone">1.2 git clone</h5>
<p>This command is git clone and not “checkout”. This is an important
distinction-instead of getting just a working copy, Git receives a full copy of
nearly all data that the server has.</p>
<ul>
  <li>Every version of every file for the history of the project is pulled down by
default when you run git clone</li>
</ul>

<h4 id="13-lifecycle-of-the-status-of-your-files">1.3 Lifecycle of the status of your files</h4>
<p>checking the status of your files</p>
<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git status
</code></pre></div></div>

<p><img align="left" src="/images/os-software-git-basic-file-lifecycle.png" /> <br /></p>

<h4 id="14-tracking-new-files">1.4 tracking new files</h4>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git add new-file
</code></pre></div></div>

<h4 id="15-ignoring-files">1.5 Ignoring Files</h4>
<p>Often, you’ll have a class of files that you don’t want Git to automatically add
or even show you as being untracked.</p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="nb">cat</span> .gitignore
<span class="k">*</span>.[oa]
<span class="k">*</span>~
</code></pre></div></div>
<ul>
  <li>the first line tells Git to ignore any files ending in “.o” or “.a”</li>
  <li>the second line tells git to ignore all files whose names end with a tilde(~)</li>
</ul>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>diff
nots
restore
reset
<span class="nb">rm
mv</span>
</code></pre></div></div>

<h4 id="detached-head">Detached Head</h4>
<ol>
  <li>Detached head means you are no longer on a branch, you have checked out a
single commit in the history
    <ul>
      <li>why we have this, what’s the advantage?</li>
      <li>If you want to delete you changes associated with the detached Head, <strong>you
only need to checkout the branch you were on</strong></li>
    </ul>
  </li>
</ol>

<p><br />  <br />
<img align="left" src="/images/os-software-git-basic-detach-head-before-switch.png" /> <br />
<br /> <br /> <br /> <br /></p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>git switch liam
</code></pre></div></div>

<p><img align="left" src="/images/os-software-git-basic-detach-head-after-switch.png" /> <br />
<br /> <br /> <br /> <br /></p>

:ET